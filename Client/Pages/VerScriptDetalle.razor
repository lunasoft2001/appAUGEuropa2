@page "/scriptDetalle/{id:int}"

@inject IRepositorio repositorio


<EditForm Model="@scriptDetalle" OnValidSubmit="@EditarScript">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="title">Title</label>
        <SfTextBox ID="title" @bind-Value="scriptDetalle.Titulo"></SfTextBox>
    </div>
    <div class="form-group">
        <label for="code">Code</label>
        <SfTextBox ID="code" he Multiline=true rows="5" @bind-Value="scriptDetalle.Codigo"></SfTextBox>
    </div>

    <div class="mt-3">
        <SfButton>Submit</SfButton>
    </div>
    


    </EditForm>


@code {
    [Parameter]
    public int id { get; set; }

    private ScriptDetalle? scriptDetalle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        scriptDetalle = new ScriptDetalle();

        var respuestaHTTP = await repositorio.Get<ScriptDetalle>($"api/ScriptDetalles/{id}");

        try
        {
            scriptDetalle = respuestaHTTP.Response;
        }
        catch
        {
            //Escribir en consola el error
            Console.WriteLine(respuestaHTTP.Error.ToString());
        }

    }

    private async Task EditarScript()
    {
        var respuestaHTTP = await repositorio.Put<ScriptDetalle>($"api/ScriptDetalles/{id}", scriptDetalle);

    }
}
